/* C Minus PEG Description */

/* Tokens */

INT   =  { HEX_LITERAL | OCT_LITERAL | DEC_LITERAL }
FLOAT = @{ (ASCII_DIGIT+ ~ "." | "." ~ ASCII_DIGIT+) ~ FLOAT_EXPONENT
         | ASCII_DIGIT+ ~ "." ~ ASCII_DIGIT+         ~ FLOAT_EXPONENT?
         }
ID    = @{ !ASCII_DIGIT ~ (ASCII_ALPHANUMERIC | "_")+ }
SEMI     = { ";" }
COMMA    = { "," }
ASSIGNOP = { "=" }
RELOP    = { ">" | "<" | ">=" | "<=" | "==" | "!=" }
PLUS     = { "+" }
MINUS    = { "-" }
STAR     = { "*" }
DIV      = { "/" }
AND      = { "&&" }
OR       = { "||" }
DOT      = { "." }
NOT      = { "!" }
TYPE     = { "int" | "float" }
LP       = { "(" }
RP       = { ")" }
LB       = { "[" }
RB       = { "]" } 
LC       = { "{" } 
RC       = { "}" }
STRUCT   = { "struct" }
RETURN   = { "return" }
IF       = { "if" }
ELSE     = { "else" }
WHILE    = { "while" }

DEC_LITERAL    = @{ "0" | ASCII_NONZERO_DIGIT ~ ASCII_DIGIT* }
HEX_LITERAL    = @{ ^"0x" ~ ASCII_HEX_DIGIT+ }
OCT_LITERAL    = @{ "0" ~ ASCII_OCT_DIGIT+ }
FLOAT_EXPONENT = @{ ^"e" ~ ("+" | "-")? ~ ASCII_DIGIT+ }

Token =  _{ SEMI
          | COMMA
          | RELOP
          | ASSIGNOP
          | PLUS
          | MINUS
          | STAR
          | DIV
          | AND
          | OR
          | DOT
          | NOT
          | TYPE
          | LP
          | RP
          | LB
          | RB
          | LC
          | RC
          | STRUCT
          | RETURN
          | IF
          | ELSE
          | WHILE
          | ID
          | FLOAT
          | INT
          }

UnknownChar = { ANY }

EndOfInput = { EOI }

TokenList = _{ (Token | UnknownChar)* ~ EndOfInput }


WHITESPACE = _{ " " | "\t" | NEWLINE }
COMMENT    = _{ "//" ~ (!NEWLINE ~ ANY)*
              | "/*" ~ (!"*/" ~ ANY)* ~ "*/"}
